package Domain;

import java.util.ArrayList;

public class ShapeHolder {
    private ArrayList<Shape> shapeList;

    public ShapeHolder() {
        this.shapeList = new ArrayList<>();
    }

    public void addShape(Shape shape) {
        this.shapeList.add( shape );
    }

    public void deleteShape(int indexNr) {
        this.shapeList.remove( indexNr );
    }

    public void print() {
        System.out.println( "This shape-list contains:" );
        int counterCircle = 0;
        int counterSquare = 0;
        int counterTriangle = 0;
        int counterSphere = 0;
        int counterBlock = 0;
        int counterCylinder = 0;
        String form;

        for (int i = 0; i < this.shapeList.size(); i++) {
            form = this.shapeList.get( i ).getNameOfShape();

            switch (form) {
                case "circle":
                    counterCircle++;
                    break;
                case "square":
                    counterSquare++;
                    break;
                case "triangle":
                    counterTriangle++;
                    break;
                case "sphere":
                    counterSphere++;
                    break;
                case "block":
                    counterBlock++;
                    break;
                case "cylinder":
                    counterCylinder++;
                    break;
            }
        }
        if (counterCircle > 0) {
            System.out.println( "circles: " + counterCircle );
        }
        if (counterCircle > 0) {
            System.out.println( "squares: " + counterSquare );
        }
        if (counterCircle > 0) {
            System.out.println( "triangles: " + counterTriangle );
        }
        if (counterSphere > 0) {
            System.out.println( "spheres: " + counterSphere );
        }
        if (counterBlock > 0) {
            System.out.println( "blocks: " + counterBlock );
        }
        if (counterCylinder > 0) {
            System.out.println( "cylinders: " + counterCylinder );
        }


    }
}
